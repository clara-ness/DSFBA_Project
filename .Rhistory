#add flags (failed for now ^^)
install.packages("countrycode")
library(remotes)
install_github('vincentarelbundock/countrycode')
library(countrycode)
library(gt)
Countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'United Kingdom', 'Switzerland')
Flags <- countrycode(Countries, 'country.name', 'unicode.symbol')
dat <- newdata(Countries, Flags)
gt(dat)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric_eu <- select(filter (Europe == TRUE))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
library(readr)
install.packages(c('tibble', 'dplyr', 'readr', 'readxl'))
install.packages(c("tibble", "dplyr", "readr", "readxl"))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
aggregate(my_list, list(Year = gsub("^Y.|.[^.]*$", "", rownames(my_list))), mean)
df %>% group_by(EU) %>% summarise(mean_class=mean(EU))
my_list %>% group_by(EU) %>% summarise(mean_class=mean(EU))
last_error()
last_error()
my_list %>% group_by(EU) %>% summarise(mean_class=mean(EU))
last_error()
`rlang::last_error()`
my_listdf %>% mutate(mean_all = rowMeans(.),
mean_sel = rowMeans(select(., select_vars)))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
library(readr)
install.packages(c('tibble', 'dplyr', 'readr', 'readxl','gt','remotes'))
install.packages(c("tibble", "dplyr", "readr", "readxl", "gt", "remotes"))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
View(my_list)
View(my_list)
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from plant protein (FAO (2017))`))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from carbohydrates (FAO (2017))`))
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
Calories_from_animal_protein<- daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric <- daily_caloric %>%
mutate(Average Calories from animal protein = mean(`Calories from animal protein (FAO (2017))`)) %>%
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(daily_caloric)
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
library(data.table)
setDT(daily_caloric)[ , grp.mean.values := mean(`Calories from animal protein (FAO (2017))`), by = code]
library(data.table)
setDT(daily_caloric)[ , mean_animal_prot := mean(`Calories from animal protein (FAO (2017))`), by = code]
View(daily_caloric)
setDT(daily_caloric)[ , mean_animal_prot := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
View(daily_caloric)
setDT(daily_caloric)[ , Calories from animal protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
View(daily_caloric)
View(daily_caloric)
View(daily_caloric)
daily_caloric <- table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein)
mosaicplot(daily_caloric)
plot(daily_caloric)
plot(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
Caloric_consumption <- table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
plot(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
plot(daily_caloric)
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
View(Caloric_consumption)
Caloric_consumption[!duplicated(Caloric_consumption)]
View(Caloric_consumption)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption[!duplicated(Caloric_consumption)]
colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
plot(daily_caloric)
View(Caloric_consumption)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
View(Caloric_consumption)
plot(Caloric_consumption)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = "Entity", y = "Calories from animal protein"))
library(tidyverse)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = "Entity", y = "Calories from animal protein"))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories from animal protein))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories from animal protein))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories_from_animal_protein))
View(Caloric_consumption)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = V1, y = V2))
ggplot(data = Caloric_consumption)
View(Caloric_consumption)
ggplot(data = Caloric_consumption)+
geom_point(aes(x = entity, y= Calories from animal protein))
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2))
hist(Caloric_consumption)
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V2)) +
geom_boxplot()
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V2)) +
geom_boxplot()
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2),color = genus)
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2),color = red)
install.packages(c('tibble', 'dplyr', 'readr', 'readxl','gt','remotes'))
debugSource('C:/Users/Clara/Desktop/GSEM 3ème/Semestre de Printemps/Introduction to Data Science/Repo/DSFBA_Project/Code.R', encoding = 'UTF-8', echo=TRUE)
library(readxl)
GDP_1960_2020_ <- read_excel("C:/Users/Clara/Desktop/GSEM 3ème/Semestre de Printemps/Introduction to Data Science/Repo/DSFBA_Project/GDP (1960-2020).xls")
View(GDP_1960_2020_)
install.packages('Rcpp')
library(Rcpp)
install.packages("Rcpp")
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
GDP <- read_excel("GDP (1960-2020).xls")
GDP <- GDP[-c(1,2),-c(3:44)]
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
#colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
#plotting data
plot(Caloric_consumption)
plot(Caloric_consumption$V2, Caloric_consumption$V3, type="h")
plot(Caloric_consumption$V2, Caloric_consumption$V4)
plot(Caloric_consumption$V3, Caloric_consumption$V4)
#Multiple plots
par(mfrow=c(3,3), mar=c(2,5,2,1), las=1, bty="n")
plot(Caloric_consumption$V2)
plot(Caloric_consumption$V2, Caloric_consumption$V3)
plot(Caloric_consumption$V2, type= "c")
plot(Caloric_consumption$V2, type= "s")
plot(Caloric_consumption$V2, type= "h")
barplot(Caloric_consumption$V2, main = 'Caloric Consumption',xlab = 'calories levels of animal protein',col='red',horiz = FALSE)
hist(Caloric_consumption$V2)
boxplot(Caloric_consumption$V2)
boxplot(Caloric_consumption[,0:4], main='Multiple Box plots')
#ggplot
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V2)) +
geom_boxplot()
ggplot(data = Caloric_consumption, mapping = aes(x = V2, y = V3, color = as.factor(V1))) + geom_point()
#try to put those 3 means in a table
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from plant protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from carbohydrates (FAO (2017))`)
#add flags (failed for now ^^)
install.packages("countrycode")
library(remotes)
install_github('vincentarelbundock/countrycode')
library(countrycode)
library(gt)
EU <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'United Kingdom', 'Switzerland')
Flags <- countrycode(EU, 'country.name', 'unicode.symbol')
dat <- newdata(EU, Flags)
gt(dat)
GDP <- read_excel("GDP (1960-2020).xls")
GDP <- GDP[-c(1,2),-c(3:44)]
Diabetes <- read_csv("Diabetes.csv")
Diabetes2 <- subset(Diabetes, Year >= 2000)
Diabetes_EU<-Diabetes2[Diabetes2$`Country/Region/World` %in% EU,]
# Keep only country rows and replace country names as needed
ctry_UNSD<-ctry_UNSD %>%
filter(ISOalpha3!="") %>%
select(country, UNSDsubregion) %>%
mutate(
country = ifelse(country == "Bolivia (Plurinational State of)", "Bolivia", country) ,
country = ifelse(country == "Cabo Verde", "Cape Verde", country) ,
country = ifelse(country == "Democratic Republic of the Congo", "Congo Democratic Republic", country) ,
country = ifelse(country == "Côte d'Ivoire", "Cote d'Ivoire", country) ,
country = ifelse(country == "Kyrgyzstan", "Kyrgyz Republic", country) ,
country = ifelse(country == "Republic of Moldova", "Moldova", country) ,
country = ifelse(country == "United Republic of Tanzania", "Tanzania", country) ,
country = ifelse(country == "Viet Nam", "Vietnam", country) )
#Joint tables
df = merge(x=Caloric_consumption,y=GDP,z=Diabetes_EU ,by="Entity")
View(Caloric_consumption)
View(Caloric_consumption)
View(Caloric_consumption)
View(daily_caloric)
View(Caloric_consumption)
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
#Caloric consumption table tidying
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR", "CHE")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(Caloric_consumption)
View(daily_caloric)
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(Caloric_consumption)
View(Caloric_consumption)
View(daily_caloric)
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(daily_caloric)
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(Caloric_consumption)
View(daily_caloric)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR", "CHE")
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(daily_caloric)
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
View(daily_caloric)
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Code,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
#Caloric consumption plotting
plot(Caloric_consumption)
View(Caloric_consumption)
Caloric_consumption %>%
rowwise() %>%
mutate(
Total_price = sum(c(V3,V4,V5))
)
Caloric_consumption %>%
rowwise() %>%
mutate(
Total_consumption = sum(c(V3,V4,V5))
)
plot(Caloric_consumption$V5
plot(Caloric_consumption$V5)
plot(Caloric_consumption)
View(Caloric_consumption)
Caloric_consumption %>%
rowwise() %>%
mutate(
Total_consumption = sum(c(V3,V4,V5))
)
Caloric_consumption<-Caloric_consumption %>%
rowwise() %>%
mutate(
Total_consumption = sum(c(V3,V4,V5))
)
plot(Caloric_consumption)
plot(Caloric_consumption$Total_consumption)
ggplot(data = Caloric_consumption, mapping = aes(x = V2, y = Total_Consumption, color = as.factor(V1))) + geom_point()
ggplot(data = Caloric_consumption, mapping = aes(x = V2, y = Total_consumption, color = as.factor(V1))) + geom_point()
##Script for the project "European countries, their dietary habits and diabetes prevalence"
#install.packages(c('tibble', 'dplyr', 'readr', 'readxl','gt','remotes')) run this line once only at the begining
#or this one install.packages('tidyverse')
#install.packages('Rcpp') for non-mac user ^^
#library(Rcpp)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
#Caloric consumption table tidying
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR", "CHE")
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Code,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
#colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
Caloric_consumption<-Caloric_consumption %>%
rowwise() %>%
mutate(
Total_consumption = sum(c(V3,V4,V5))
)
#Caloric consumption plotting
plot(Caloric_consumption)
plot(Caloric_consumption$V5, Caloric_consumption$V3, type="h")
plot(Caloric_consumption$V5, Caloric_consumption$V4)
plot(Caloric_consumption$V3, Caloric_consumption$V4)
#Caloric consumption multiple plots
par(mfrow=c(3,3), mar=c(2,5,2,1), las=1, bty="n")
plot(Caloric_consumption$V5)
plot(Caloric_consumption$V5, Caloric_consumption$V3)
plot(Caloric_consumption$V5, type= "c")
plot(Caloric_consumption$V5, type= "s")
plot(Caloric_consumption$V5, type= "h")
barplot(Caloric_consumption$V5, main = 'Caloric Consumption',xlab = 'calories levels of animal protein',col='red',horiz = FALSE)
hist(Caloric_consumption$V5)
boxplot(Caloric_consumption$V5)
boxplot(Caloric_consumption[,0:4], main='Multiple Box plots')
#Caloric consumption ggplot
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V5)) +
geom_boxplot()
ggplot(data = Caloric_consumption, mapping = aes(x = V2, y = Total_consumption, color = as.factor(V1))) + geom_point()
#try to put those 3 means in a table
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from plant protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from carbohydrates (FAO (2017))`)
#add flags (failed for now ^^)
install.packages("countrycode")
library(remotes)
install_github('vincentarelbundock/countrycode')
library(countrycode)
library(gt)
EU <- c('AUT', 'BEL', 'BGR', 'HRV', 'CYP', 'CZE', 'DNK', 'EST', 'FIN', 'FRA', 'DEU', 'GRC', 'HUN', 'IRL', 'ITA', 'LVA', 'LTU', 'LUX', 'MLT', 'NLD', 'POL', 'PRT', 'ROU', 'SVK', 'SVN', 'ESP', 'SWE', 'GBR', 'CHE')
Flags <- countrycode(EU, 'country.name', 'unicode.symbol')
dat <- newdata(EU, Flags)
gt(dat)
#GDP table tidying
GDP <- read_excel("GDP (1960-2020).xls")
colnames(GDP) <- GDP[3,]
GDP <- GDP[-c(1:3),-c(3:44,59:65)] #or maybe use the filter and select functions
GDP <- GDP[GDP$"Country Code" %in% EU,]
GDP <- GDP %>% pivot_longer(c('2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013'),names_to = "Year",values_to = "Gross Domestic Product")
colnames(GDP) <- c("country_name","country_code","year","avg_gdp")
GDP$avg_gdp <- as.numeric(GDP$avg_gdp)
GDP <- GDP %>%
group_by(country_name) %>%
summarize(avg_gdp = mean(avg_gdp))
#Diabetes table tidying
Diabetes <- read_csv("Diabetes.csv")
Diabetes2 <- subset(Diabetes, Year >= 2000 , Year <=2013)
Diabetes_EU<-Diabetes2[Diabetes2$`ISO` %in% EU,]
Diabetes_EU <- Diabetes_EU[-c(6,7)] #drop interval
Diabetes_EU_men <-subset(Diabetes_EU, Sex=="Men")
Diabetes_EU_women <-subset(Diabetes_EU, Sex=="Women")
#Mean of 2000-2013
setDT(Diabetes_EU_men)[ , list(`Age-standardised diabetes prevalence`= mean(`Age-standardised diabetes prevalence`)), by='Country/Region/World']
setDT(Diabetes_EU_women)[ , list(`Age-standardised diabetes prevalence`= mean(`Age-standardised diabetes prevalence`)), by='Country/Region/World']
# Keep only country rows and replace country names as needed
ctry_UNSD<-ctry_UNSD %>%
filter(ISOalpha3!="") %>%
select(country, UNSDsubregion) %>%
mutate(
country = ifelse(country == "Bolivia (Plurinational State of)", "Bolivia", country) ,
country = ifelse(country == "Cabo Verde", "Cape Verde", country) ,
country = ifelse(country == "Democratic Republic of the Congo", "Congo Democratic Republic", country) ,
country = ifelse(country == "Côte d'Ivoire", "Cote d'Ivoire", country) ,
country = ifelse(country == "Kyrgyzstan", "Kyrgyz Republic", country) ,
country = ifelse(country == "Republic of Moldova", "Moldova", country) ,
country = ifelse(country == "United Republic of Tanzania", "Tanzania", country) ,
country = ifelse(country == "Viet Nam", "Vietnam", country))
#Joint tables
df = merge(x=Caloric_consumption,y=GDP,z=Diabetes_EU ,by="Entity")
View(Diabetes_EU)
View(Diabetes_EU)
View(Diabetes_EU)
View(Diabetes_EU)
View(Diabetes_EU)
View(Diabetes_EU)
View(Diabetes_EU)
