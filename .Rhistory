install.packages(c('tibble', 'dplyr', 'readr', 'readxl'))
# or install.packages('tidyverse')
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
View(daily_caloric)
View(newdata)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-df[]
my_list<-df[FALSE,]
my_list=df[FALSE,]
newdata(1)
newdata(1,1)
print(newdata(1,1))
newdata
for (i in 1:nrow(newdata)) {
if newdata[i,1] %in% EU {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
for (i in 1:nrow(newdata)) {
if newdata[i,1] %in% EU {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
j=1
for (i in 1:nrow(newdata)) {
if newdata[i,1] %in% EU {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
for(i in 1:2) {
if newdata[i,1] %in% EU {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
j=1
for(i in 1:2){
if (newdata[i,1] %in% EU) {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
j=1
for(i in 1:20){
if (newdata[i,1] %in% EU) {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
j=1
for(i in 1:200){
if (newdata[i,1] %in% EU) {
my_list[,j]<-newdata[,j];
j=j+1;
}
}
daily_caloric_eu <- subset(newdata, Entity==EU);
newdata[newdata$Entity %in% EU]
newdata[newdata$Entity %in% EU,]
##Script for the project "European countries, their dietary habits and diabetes prevalence"
#Hellooooo
install.packages(c('tibble', 'dplyr', 'readr', 'readxl'))
install.packages(c("tibble", "dplyr", "readr", "readxl"))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[!newdata$Entity %in% EU,]
View(my_list)
View(my_list)
View(my_list)
View(my_list)
View(my_list)
View(my_list)
my_list<-newdata[newdata$Entity %in% EU,]
View(my_list)
View(my_list)
#add flags (failed for now ^^)
install.packages("countrycode")
library(remotes)
install_github('vincentarelbundock/countrycode')
library(countrycode)
library(gt)
Countries <- c('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'United Kingdom', 'Switzerland')
Flags <- countrycode(Countries, 'country.name', 'unicode.symbol')
dat <- newdata(Countries, Flags)
gt(dat)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric_eu <- select(filter (Europe == TRUE))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
library(readr)
install.packages(c('tibble', 'dplyr', 'readr', 'readxl'))
install.packages(c("tibble", "dplyr", "readr", "readxl"))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
aggregate(my_list, list(Year = gsub("^Y.|.[^.]*$", "", rownames(my_list))), mean)
df %>% group_by(EU) %>% summarise(mean_class=mean(EU))
my_list %>% group_by(EU) %>% summarise(mean_class=mean(EU))
last_error()
last_error()
my_list %>% group_by(EU) %>% summarise(mean_class=mean(EU))
last_error()
`rlang::last_error()`
my_listdf %>% mutate(mean_all = rowMeans(.),
mean_sel = rowMeans(select(., select_vars)))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
library(readr)
install.packages(c('tibble', 'dplyr', 'readr', 'readxl','gt','remotes'))
install.packages(c("tibble", "dplyr", "readr", "readxl", "gt", "remotes"))
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
newdata <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
my_list<-newdata[newdata$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`), n = n())
View(my_list)
View(my_list)
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from plant protein (FAO (2017))`))
my_list %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from carbohydrates (FAO (2017))`))
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
Calories_from_animal_protein<- daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric %>%
group_by(Code) %>%
summarise(mean = mean(`Calories from animal protein (FAO (2017))`)
daily_caloric <- daily_caloric %>%
mutate(Average Calories from animal protein = mean(`Calories from animal protein (FAO (2017))`)) %>%
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
View(daily_caloric)
daily_caloric <- daily_caloric %>%
mutate(Animal_protein=mean(`Calories from animal protein (FAO (2017))`)) %>%
head()
View(daily_caloric)
View(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
library(data.table)
setDT(daily_caloric)[ , grp.mean.values := mean(`Calories from animal protein (FAO (2017))`), by = code]
library(data.table)
setDT(daily_caloric)[ , mean_animal_prot := mean(`Calories from animal protein (FAO (2017))`), by = code]
View(daily_caloric)
setDT(daily_caloric)[ , mean_animal_prot := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
View(daily_caloric)
setDT(daily_caloric)[ , Calories from animal protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
View(daily_caloric)
View(daily_caloric)
View(daily_caloric)
daily_caloric <- table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein)
mosaicplot(daily_caloric)
plot(daily_caloric)
plot(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
Caloric_consumption <- table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
plot(daily_caloric)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
plot(daily_caloric)
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
View(Caloric_consumption)
Caloric_consumption[!duplicated(Caloric_consumption)]
View(Caloric_consumption)
library(readr)
library(dplyr)
library(readxl)
library(data.table)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption[!duplicated(Caloric_consumption)]
colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
plot(daily_caloric)
View(Caloric_consumption)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
colnames(Caloric_consumption) <- c("Entity", "Calories from animal protein", "Calories from plant protein", "Calories from carbohydrates")
View(Caloric_consumption)
plot(Caloric_consumption)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = "Entity", y = "Calories from animal protein"))
library(tidyverse)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = "Entity", y = "Calories from animal protein"))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories from animal protein))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories from animal protein))
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = Entity, y = Calories_from_animal_protein))
View(Caloric_consumption)
ggplot(data = Caloric_consumption) +
geom_point(mapping = aes(x = V1, y = V2))
ggplot(data = Caloric_consumption)
View(Caloric_consumption)
ggplot(data = Caloric_consumption)+
geom_point(aes(x = entity, y= Calories from animal protein))
library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(tidyverse)
daily_caloric <- read_csv("daily-caloric.csv")
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <-c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom", "Switzerland")
daily_caloric<-daily_caloric[daily_caloric$Entity %in% EU,] # Subset of table by looking if in each row, Entity is in the EU vector
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
#FAO = Food and Agriculture Organisation
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2))
hist(Caloric_consumption)
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V2)) +
geom_boxplot()
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = Caloric_consumption, mapping = aes(x = V1, y = V2)) +
geom_boxplot()
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2),color = genus)
ggplot(data = Caloric_consumption)+
geom_point(aes(x = V1, y= V2),color = red)
