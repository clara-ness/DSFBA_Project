)
)
#cluster 2
c57 <- matrix(c(cor(countries_cluster_2bis$prop_men_diabetes, countries_cluster_2bis$proportion_carbs),cor(countries_cluster_2bis$prop_women_diabetes, countries_cluster_2bis$proportion_carbs)))
rownames(c57) <- c("Between men diabetes rate and calories from carbs", "Between women diabetes rate and calories from carbs")
kbl(c57,
caption = "**Correlation for cluster 2",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
lm_diabm_prop_carbs_clust2 <- lm(prop_men_diabetes ~ proportion_carbs, data = countries_cluster_2bis)
tab_model(
lm_diabm_prop_carbs_clust2, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between men diabetes rate and calories from carbs"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_prop_carbs_clust2 <- lm(prop_women_diabetes ~ proportion_carbs, data = countries_cluster_2bis)
tab_model(
lm_diabw_prop_carbs_clust2, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between women diabetes rate and calories from carbs"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
#cluster 3
c58 <- matrix(c(cor(countries_cluster_3bis$prop_men_diabetes, countries_cluster_3bis$proportion_carbs),cor(countries_cluster_3bis$prop_women_diabetes, countries_cluster_3bis$proportion_carbs)))
rownames(c58) <- c("Between men diabetes rate and calories from carbs", "Between women diabetes rate and calories from carbs")
kbl(c58,
caption = "**Correlation for cluster 3",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
lm_diabm_prop_carbs_clust3 <- lm(prop_men_diabetes ~ proportion_carbs, data = countries_cluster_3bis)
tab_model(
lm_diabm_prop_carbs_clust3, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between men diabetes rate and calories from carbs"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_prop_carbs_clust3 <- lm(prop_women_diabetes ~ proportion_carbs, data = countries_cluster_3bis)
tab_model(
lm_diabw_prop_carbs_clust3, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between women diabetes rate and calories from carbs"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
ggplot(data = GDP_diabetes_cal) +
geom_point(mapping = aes(x = proportion_fat, y = prop_men_diabetes, color = "blue")) +
geom_smooth(mapping = aes(x = proportion_fat, y = prop_men_diabetes, color = "blue"), formula = y ~ x, method = "lm") +
geom_point(mapping = aes(x = proportion_fat, y = prop_women_diabetes, color = "red")) +
geom_smooth(mapping = aes(x = proportion_fat, y = prop_women_diabetes, color = "red"), formula = y ~ x, method = "lm") +
labs(title="Diabetes rate vs Proportion of fat consumed", x="Proportion", y="Diabetes rate") +
scale_color_manual(labels = c("Men", "Women"), values = c("blue", "red")) +
scale_y_continuous(labels = scales::percent)
#Diabetes - proportion
lm_diabm_prop_fat <- lm(prop_men_diabetes ~ proportion_fat, data = GDP_diabetes_cal)
tab_model(
lm_diabm_prop_fat, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between diabetes rate for men and calories from fat"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_prop_fat <- lm(prop_women_diabetes ~ proportion_fat, data = GDP_diabetes_cal)
tab_model(
lm_diabw_prop_fat, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between diabetes rate for women and calories from fat"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
#cluster 1
c59 <- matrix(c(cor(countries_cluster_1bis$prop_men_diabetes, countries_cluster_1bis$proportion_fat),cor(countries_cluster_1bis$prop_women_diabetes, countries_cluster_1bis$proportion_fat)))
rownames(c59) <- c("Between men diabetes rate and calories from fat", "Between women diabetes rate and calories from fat")
kbl(c59,
caption = "**Correlation for cluster 1",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
lm_diabm_fat_clust1 <- lm(prop_men_diabetes ~ proportion_fat, data = countries_cluster_1bis)
tab_model(
lm_diabm_fat_clust1, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between men diabetes rate and calories from fat "),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_fat_clust1 <- lm(prop_women_diabetes ~ proportion_fat, data = countries_cluster_1bis)
tab_model(
lm_diabw_fat_clust1, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between women diabetes rate and calories from fat"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
#cluster 2
c60 <- matrix(c(cor(countries_cluster_2bis$prop_men_diabetes, countries_cluster_2bis$proportion_fat),cor(countries_cluster_2bis$prop_women_diabetes, countries_cluster_2bis$proportion_fat)))
rownames(c60) <- c("Between men diabetes rate and calories from fat", "Between women diabetes rate and calories from fat")
kbl(c60,
caption = "**Correlation for cluster 2",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
lm_diabm_fat_clust2 <- lm(prop_men_diabetes ~ proportion_fat, data = countries_cluster_2bis)
tab_model(
lm_diabm_fat_clust2, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between men diabetes rate and calories from fat "),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_fat_clust2 <- lm(prop_women_diabetes ~ proportion_fat, data = countries_cluster_2bis)
tab_model(
lm_diabw_fat_clust2, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between women diabetes rate and calories from fat"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
#cluster 3
c61 <- matrix(c(cor(countries_cluster_3bis$prop_men_diabetes, countries_cluster_3bis$proportion_fat),cor(countries_cluster_3bis$prop_women_diabetes, countries_cluster_3bis$proportion_fat)))
rownames(c61) <- c("Between men diabetes rate and calories from fat", "Between women diabetes rate and calories from fat")
kbl(c61,
caption = "**Correlation for cluster 3",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
lm_diabm_fat_clust3 <- lm(prop_men_diabetes ~ proportion_fat, data = countries_cluster_3bis)
tab_model(
lm_diabm_fat_clust3, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between men diabetes rate and calories from fat "),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
lm_diabw_fat_clust3 <- lm(prop_women_diabetes ~ proportion_fat, data = countries_cluster_3bis)
tab_model(
lm_diabw_fat_clust3, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Between women diabetes rate and calories from fat"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
#means for each cluster
countries_cluster_1 <- countries_cluster_1[,-10]
cl1 <- summarize_all(countries_cluster_1, mean)
countries_cluster_2 <- countries_cluster_2[,-10]
cl2 <- summarize_all(countries_cluster_2, mean)
countries_cluster_3 <- countries_cluster_3[,-10]
cl3 <- summarize_all(countries_cluster_3, mean)
cl_all3 <- rbind(cl1, cl2, cl3)
rownames(cl_all3) <- c("Cluster 1", "Cluster 2", "Cluster 3")
kbl(cl_all3,
caption = "**Mean for each cluster**",
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
slices <- c(cl1[1,5],cl1[1,6],cl1[1,7], cl1[1,8] )
lbls <- c("Animal Protein", "Plant Protein", "Carbs", "Fat")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices, labels = lbls,col=rainbow(length(lbls)), main="Consumption Pattern : Cluster 1")
slices <- c(cl2[1,5],cl2[1,6],cl2[1,7], cl2[1,8] )
lbls <- c("Animal Protein", "Plant Protein", "Carbs", "Fat")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices, labels = lbls,col=rainbow(length(lbls)), main="Consumption Pattern : Cluster 2")
slices <- c(cl3[1,5],cl3[1,6],cl3[1,7], cl3[1,8] )
lbls <- c("Animal Protein", "Plant Protein", "Carbs", "Fat")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices, labels = lbls,col=rainbow(length(lbls)), main="Consumption Pattern : Cluster 3")
View(GDP_diabetes_cal)
source(here::here("scripts/setup.R"))
daily_caloric <- read_csv(here::here("data/daily-caloric.csv"))
daily_caloric <- subset(daily_caloric, Year >= 2000)
EU <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR", "CHE")
daily_caloric<-daily_caloric[daily_caloric$Code %in% EU,]
setDT(daily_caloric)[ , Calories_from_animal_protein := mean(`Calories from animal protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_plant_protein := mean(`Calories from plant protein (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_carbohydrates := mean(`Calories from carbohydrates (FAO (2017))`), by = "Entity"]
setDT(daily_caloric)[ , Calories_from_fat := mean(`Calories from fat (FAO (2017))`), by = "Entity"]
Caloric_consumption <- data.table(daily_caloric$Entity,daily_caloric$Code,daily_caloric$Calories_from_animal_protein, daily_caloric$Calories_from_plant_protein,daily_caloric$Calories_from_carbohydrates,daily_caloric$Calories_from_fat)
Caloric_consumption <-Caloric_consumption[!duplicated(Caloric_consumption)]
Caloric_consumption <- Caloric_consumption[,-1]
colnames(Caloric_consumption) <- c("country_code", "cal_prot_animal", "cal_prot_plant", "cal_carbs","cal_fat")
Caloric_consumption <-Caloric_consumption %>%
group_by(country_code) %>%
mutate(
total_consumption = sum(c(cal_prot_animal,cal_prot_plant,cal_carbs,cal_fat)))
Caloric_consumption$total_consumption <- as.numeric(Caloric_consumption$total_consumption)
kbl(Caloric_consumption,
caption = "**Table 1**: Caloric Consumption",
col.names = c('Country Code', 'Calories from animal protein', 'Calories from plant protein','Calories from carbohydrates', 'Calories from fat', 'Total consumption'),
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
GDP <- read_excel(here::here("data/GDP(1960-2020).xls"))
colnames(GDP) <- GDP[3,]
GDP <- GDP[-c(1:3),-c(3:44,59:65)]
GDP <- GDP[GDP$"Country Code" %in% EU,]
GDP <- GDP %>% pivot_longer(c('2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013'),names_to = "Year",values_to = "Gross Domestic Product")
colnames(GDP) <- c("country_name","country_code","year","avg_gdp")
GDP$avg_gdp <- as.numeric(GDP$avg_gdp)/1000000000
GDP2 <- GDP
GDP2$avg_gdp <- GDP2$avg_gdp*1000000000
GDP_summarized <- GDP %>%
group_by(country_name, country_code) %>%
dplyr::summarize(avg_gdp = mean(avg_gdp))
kbl(GDP_summarized,
caption = "**Table 2**: GDP",
col.names = c('Country Name', 'Country Code', 'Average GDP (in billion $)'),
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
population <- read_excel(here::here("data/population.xls"))
colnames(population) <- population[3,]
population <- population[-c(1:3),-c(3:44,59:65)]
population <- population[population$"Country Code" %in% EU,]
population <- population %>% pivot_longer(c('2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013'),names_to = "Year",values_to = "Total Population")
colnames(population) <- c("country_name","country_code","year","avg_population")
population$avg_population <- as.numeric(population$avg_population)
GDP2 <- mutate(GDP2, gdp_per_person = GDP2$avg_gdp/population$avg_population)
GDP_summarized2 <- GDP2 %>%
group_by(country_name, country_code) %>%
dplyr::summarize(gdp_per_person = mean(gdp_per_person))
Diabetes <- read_csv(here::here("data/Diabetes.csv"))
Diabetes <- subset(Diabetes, Year >= 2000 , Year <=2013)
Diabetes_EU<-Diabetes[Diabetes$`ISO` %in% EU,]
Diabetes_EU <- Diabetes_EU[-c(6,7)]
colnames(Diabetes_EU)<-c("country","ISO","sex","year","prop_diabetes")
Diabetes_EU_men <-subset(Diabetes_EU, sex=="Men")
Diabetes_EU_women <-subset(Diabetes_EU, sex=="Women")
colnames(Diabetes_EU_men)<-c("country","country_code","sex","year","prop_men_diabetes")
colnames(Diabetes_EU_women)<-c("country","country_code","sex","year","prop_women_diabetes")
Diabetes_EU_men <- Diabetes_EU_men %>%
group_by(country_code) %>%
dplyr::summarize(prop_men_diabetes = mean(prop_men_diabetes))
kbl(Diabetes_EU_men,
caption = "**Table 3**: Diabetes rates for men",
col.names = c('Country Code', 'Diabetes rate'),
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
Diabetes_EU_women <- Diabetes_EU_women %>%
group_by(country_code) %>%
dplyr::summarize(prop_women_diabetes = mean(prop_women_diabetes))
kbl(Diabetes_EU_men,
caption = "**Table 4**: Diabetes rates for women",
col.names = c('Country Code', 'Diabetes rate'),
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
GDP_diabetes_cal <- full_join(GDP_summarized,GDP_summarized2, by=c("country_name","country_code"))
GDP_diabetes_cal <-full_join(GDP_diabetes_cal,Diabetes_EU_men, by="country_code")
GDP_diabetes_cal <-full_join(GDP_diabetes_cal,Diabetes_EU_women, by="country_code")
GDP_diabetes_cal <-full_join(GDP_diabetes_cal ,Caloric_consumption, by="country_code")
kbl(GDP_diabetes_cal,
caption = "**Table 5**: Joint table for GDP, diabetes and caloric consumption",
col.names = c('Country Name','Country Code','Average GDP (in billion $)','GDP per person (in $)','Men Diabetes', 'Women Diabetes', 'Calories from animal protein', 'Calories from plant protein','Calories from carbohydrates', 'Calories from fat', 'Total consumption'),
align = c('cccccc')) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c('striped', 'hover', 'condensed'))
data_1 <- GDP_diabetes_cal[,-(1:2),drop=FALSE] #-> introduce the proportions later on ?
rownames(data_1) <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU","GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR", "CHE")
fviz_nbclust(data_1, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2) + # add line for better visualisation
labs(subtitle = "Elbow method")+ # add subtitle
scale_y_continuous(labels = scales::label_number_si())
set.seed(123)
model_cluster <- kmeans(data_1, centers = 3, nstart = 10)
Data_cluster <- data.frame(data_1, cluster = as.factor(model_cluster$cluster))
countries_cluster_1 <- filter(Data_cluster, cluster == "1")
countries_cluster_2 <- filter(Data_cluster, cluster == "2")
countries_cluster_3 <- filter(Data_cluster, cluster == "3")
myCluster<-rbind.data.frame(countries_cluster_1, countries_cluster_2, countries_cluster_3)
EU_cluster <- c("AUT","BEL", "DNK", "FIN", "FRA", "DEU", "IRL", "ITA", "NLD", "SWE", "CHE", "BGR", "HRV", "CYP", "CZE", "EST", "GRC", "HUN", "LVA", "LTU", "MLT", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "LUX", "GBR")
CL_EU <- cbind(myCluster, EU_cluster)
SHP_0 <- get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2016)
SHP_0 <- get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2016)
eu <- c("SHQ", "AUT", "BEL", "NLD", "POL", "PRT", "DNK", "DEU", "ELL", "BGR", "CHE", "CYP", "ROU", "SRB","CZE", "EST", "HUN", "HRV", "SVN", "SVK", "SWE", "ITA", "TUR", "FIN", "NOR", "IRL", "ISL", "LIE", "LTU", "LUX", "LVA", "MNE", "MLT", "FRA")
SHP_0 <- get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2016)
eu <- c("SHQ", "AUT", "BEL", "NLD", "POL", "PRT", "DNK", "DEU", "ELL", "BGR", "CHE", "CYP", "ROU", "SRB","CZE", "EST", "HUN", "HRV", "SVN", "SVK", "SWE", "ITA", "TUR", "FIN", "NOR", "IRL", "ISL", "LIE", "LTU", "LUX", "LVA", "MNE", "MLT", "FRA")
SHP_0 <- SHP_0[-c(1, 9, 15, 17, 24, 26, 28, 29, 33, 34), ]
CL_EU <- cbind(CL_EU, nb_cluster)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$cluster == 1,
yes = 0.5,
no = 0
),
fillColor = "red")
View(model_cluster)
View(myCluster)
nb_cluster <-as.numeric(levels(CL_EU$cluster))[CL_EU$cluster]
CL_EU <- cbind(CL_EU, nb_cluster)
View(CL_EU)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$cluster == 1,
yes = 0.5,
no = 0
),
fillColor = "red")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 1,
yes = 0.5,
no = 0
),
fillColor = "red")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 3,
yes = 0.5,
no = 0
),
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 1,
yes = 1,
no = 0
),
fillColor = "red")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 2,
yes = 1,
no = 0
),
fillColor = "blue")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 3,
yes = 1,
no = 0
),
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = if(
test = CL_EU$nb_cluster == 3,
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = ifelse(
test = CL_EU$nb_cluster == 3,
yes = 1,
no = 0
),
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = if (CL_EU$nb_cluster == 3){
yes = 1
no = 0
}
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = if (CL_EU$nb_cluster == 3){
yes = 1
no = 0
},
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = if (CL_EU$nb_cluster == 1){
yes = 1
no = 0
},
fillColor = "orange")
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(color = "black",
weight = 1,
fillOpacity = if (CL_EU$nb_cluster == 2){
yes = 1
no = 0
},
fillColor = "orange")
var geojsonLayer = L.geoJson(SHP_0, {
lm_gdp_diabetes_women_clust1 <- lm(avg_gdp ~ prop_women_diabetes, data = countries_cluster_1)
lm_gdp_diabetes_men_clust1 <- lm(avg_gdp ~ prop_men_diabetes, data = countries_cluster_1)
tab_model(
lm_gdp_diabetes_men_clust1, show.ci = FALSE, show.stat = TRUE, show.se = TRUE,
dv.labels = c("Average GDP vs Men diabetes rate (cluster 1)"),
CSS = list(
css.width = '500px',
css.centeralign = 'text-align: left;',
css.firsttablecol = 'font-weight: bold;',
css.summary = 'color: black;'
)
)
qpal <- colorQuantile("Blues", CL_EU$nb_cluster, n = 3)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~qpal(CL_EU$nb_cluster))
CL_EU$nb_cluster <- factor(sample.int(3L, nrow(nb_cluster), TRUE))
binpal <- colorBin("Blues", CL_EU$nb_cluster, 3, pretty = FALSE)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~binpal(nb_cluster))
qpal <- colorQuantile("Blues", CL_EU$nb_cluster, n = 3)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~qpal(CL_EU$nb_cluster))
binpal <- colorBin("Blues", CL_EU$nb_cluster, 3, pretty = FALSE)
leaflet(SHP_0) %>%
setView(lng = 15, lat = 50, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~binpal(nb_cluster))
